

- name: Create a working folder
  file: path={{es_security_working_folder}} state=directory owner=root group=root mode="0700"

- name: Generate certificate authority
  shell: export ES_PATH_CONF={{es_path_conf}}; /usr/share/elasticsearch/bin/elasticsearch-certutil ca --pass "" --out {{es_security_working_folder}}/ca.p12
  args:
    chdir: "{{es_security_working_folder}}"
    creates: "{{es_security_working_folder}}/ca.p12"
    
- name: Generate certutil instances configuration file
  template: src=instances.yml dest={{es_security_working_folder}}/instances.yml owner=root group=root mode="0600"
  
- name: Generate certificates archive
  shell: export ES_PATH_CONF={{es_path_conf}}; /usr/share/elasticsearch/bin/elasticsearch-certutil cert --pass ""  --silent --ca {{es_security_working_folder}}/ca.p12 --ca-pass "" --in {{es_security_working_folder}}/instances.yml --out {{es_security_working_folder}}/certs.zip
  args:
    chdir: "{{es_security_working_folder}}"
    creates: "{{es_security_working_folder}}/certs.zip"

- name: Fetch certificate archive    
  fetch:
    dest: certs/certs.zip
    src: "{{es_security_working_folder}}/certs.zip"
    flat: yes

- name: Unzip certificates archive
  unarchive:
    src: "certs/certs.zip"
    dest: "certs"
  delegate_to: localhost

