
- hosts: postgresql_server
  tags: [ "postgresql", "postgresql_server" ]
  vars:
    pg_base_url: {{{ m.data.repositories.postgresql_server.base_url }}}
    pg_libs_url: {{{ m.data.repositories.postgresql_server.libs_url }}}
    pg_server_url: {{{ m.data.repositories.postgresql_server.server_url }}}
    pg_version: "{{{ m.data.repositories.postgresql_server.version }}}"
{%% if m.cluster.postgresql_server.password is defined %%}
    pg_postgres_password: "{{{ m.cluster.postgresql_server.password }}}"
{%% endif %%}
{%% if m.cluster.postgresql_server.encrypted_password is defined %%}
    pg_postgres_encrypted_password: "{{{ m.cluster.postgresql_server.encrypted_password }}}"
{%% endif %%}
{%% if m.cluster.postgresql_server.access_rules is defined %%}
    pg_access_rules: 
{{{ m.cluster.postgresql_server.access_rules | to_pretty_yaml()|indent(width=4, first=True) }}}
{%% else %%}
    postgresql_access_rules: [] 
{%% endif %%}
  roles:
  - { role: postgresql_server }

{%% if  m.cluster.postgresql_server.users|length > 0 or m.cluster.postgresql_server.databases|length > 0 %%}
  tasks:
{%% endif %%}
{%% if  m.cluster.postgresql_server.users|length > 0 %%}
  - name: Create user(s) 
    postgresql_user: name={{item.name}} password={{item.password}} role_attr_flags=NOSUPERUSER,NOCREATEROLE,NOCREATEDB,INHERIT,LOGIN  
    with_items: {{{  m.cluster.postgresql_server.users }}}
    become: yes
    become_user: postgres
{%% endif %%}
{%% if  m.cluster.postgresql_server.databases|length > 0 %%}
  - name: Create database(s)
    postgresql_db: name={{item.name}} owner={{item.owner}} 
    with_items: {{{  m.cluster.postgresql_server.databases }}}
    become: yes
    become_user: postgres
  - name: Remove public access on created databases
    postgresql_privs: database={{item.name}} type=database roles=PUBLIC state=absent privs=ALL
    with_items: {{{  m.cluster.postgresql_server.databases }}}
    become: yes
    become_user: postgres
{%% endif %%}
