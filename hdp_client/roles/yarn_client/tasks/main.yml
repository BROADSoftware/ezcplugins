# Copyright (C) 2018 BROADSoftware
#
# This file is part of EzCluster
#
# EzCluster is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EzCluster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# 
#----------------------------------------------------------------------- YARN  
  - name: Check existing YARN config
    command: grep {{cluster_id}} /etc/hadoop/conf/yarn-site.xml
    failed_when: false
    changed_when: false
    register: ret_yarn
  
#  - debug: var=ret

  - name: Fetch YARN config
    get_url:
      url: "{{ambari_server_url}}/api/v1/clusters/{{cluster_id}}/services/YARN/components/YARN_CLIENT?format=client_config_tar"
      dest: "/tmp/YARN_CLIENT_CONFIG-{{cluster_id}}.tar"
      force_basic_auth: yes
      url_username: admin
      url_password: admin
      headers: 
        "X-Requested-By" : "ambari"
    when: ret_yarn.rc != 0 
    
  - name: Deploy YARN client config in /etc/hadoop/conf       
    unarchive:
      src: "/tmp/YARN_CLIENT_CONFIG-{{cluster_id}}.tar"
      dest: /etc/hadoop/conf
      remote_src: True
    when: ret_yarn.rc != 0 
 
  - name: Fix permissions (Due to archive bug) 
    file: path=/etc/hadoop/conf state=directory mode=0755  
  
  
  - name: Remove JAVA_HOME from yarn-env.sh
    lineinfile:
      dest: /etc/hadoop/conf/yarn-env.sh
      regexp: "export\\s+JAVA_HOME"
      state: absent
 
  - name: Remove tez as we may have changed of target cluster
    file: path=/etc/tez/conf/tez-site.xml state=absent
    when: ret_yarn.rc != 0 
 
  # Don't know why, but yarn-env.sh include 
  # YARN_OPTS="$YARN_OPTS -Djava.io.tmpdir=/var/lib/ambari-agent/tmp/hadoop_java_io_tmpdir" or
  # YARN_OPTS="$YARN_OPTS -Djava.io.tmpdir=/var/lib/ambari-server/data/tmp/hadoop_java_io_tmpdir" 
  - name: Create tmp folders (1/2) 
    file: path=/var/lib/ambari-server/data/tmp/hadoop_java_io_tmpdir mode="0777" owner=hdfs group=hadoop state=directory
  - name: Create tmp folders (2/2)
    file: path=/var/lib/ambari-agent/tmp/hadoop_java_io_tmpdir mode="0777" owner=hdfs group=hadoop state=directory

#----------------------------------------------------------------------- Map Reduce
  
  - name: Check existing MR config
    command: grep {{cluster_id}} /etc/hadoop/conf/mapred-site.xml
    failed_when: false
    changed_when: false
    register: ret_mr
  
#  - debug: var=ret

  - name: Fetch MR config
    get_url:
      url: "{{ambari_server_url}}/api/v1/clusters/{{cluster_id}}/services/MAPREDUCE2/components/MAPREDUCE2_CLIENT?format=client_config_tar"
      dest: "/tmp/MAPREDUCE2_CLIENT_CONFIG-{{cluster_id}}.tar"
      force_basic_auth: yes
      url_username: admin
      url_password: admin
      headers: 
        "X-Requested-By" : "ambari"
    when: ret_mr.rc != 0 
    
  - name: Deploy MR client config in /etc/hadoop/conf       
    unarchive:
      src: "/tmp/MAPREDUCE2_CLIENT_CONFIG-{{cluster_id}}.tar"
      dest: /etc/hadoop/conf
      remote_src: True
    when: ret_mr.rc != 0 

  - name: Fix permissions (Due to archive bug) 
    file: path=/etc/hadoop/conf state=directory mode=0755  
  
